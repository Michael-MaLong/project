# coding=utf-8
"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 1.10.7.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


FILEPATH = os.path.abspath(os.path.dirname(os.path.dirname(__file__)))
ADDITION_FILE_ROOT = FILEPATH + '/files/'




# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '!%ypi3%dx@-y7j1w$vdtc9qvjk06z2p#o1bzmtbx7d1+k#99zc'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 'django.contrib.staticfiles',
    'django_forms_bootstrap',
    'modules.common',
    'modules.contentinfo',
    'modules.homepage',
    'modules.roleinfo',
    'modules.serverinfo',
    'modules.userinfo',
    'modules.userlog',
    'modules.systeminfo',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

]

ROOT_URLCONF = 'mysite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }


confFileName = FILEPATH + "/conf/my.conf"

# DATABASE_ENGINE = "sqlite3"
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }

if os.path.exists(confFileName):
    import configparser

    cf = configparser.ConfigParser(strict=False, allow_no_value=True)
    cf.read(confFileName)

    DATABASE_NAME = cf.get('DATABASE', 'NAME')
    DATABASE_ENGINE = cf.get('DATABASE', 'ENGINE')
    DATABASE_USER = cf.get('DATABASE', 'USER')
    DATABASE_PASSWORD = cf.get('DATABASE', 'PASSWORD')
    DATABASE_HOST = cf.get('DATABASE', 'HOST')
    DATABASE_PORT = cf.get('DATABASE', 'PORT')
    DATABASES = {
        'default': {
            'NAME': DATABASE_NAME,
            'ENGINE': DATABASE_ENGINE,
            'USER': DATABASE_USER,
            'PASSWORD': DATABASE_PASSWORD,
            'HOST': DATABASE_HOST,
            'PORT': DATABASE_PORT,
            'CONN_MAX_AGE': 30,
        }
    }

    if DATABASE_ENGINE.lower() in ['mysql', 'oracle']:
        DATABASES['default']['ENGINE'] = 'django.db.backends.%s' % (DATABASE_ENGINE)
    elif DATABASE_ENGINE.lower() in ['sql_server']:
        DATABASES['default']['ENGINE'] = '%s.pyodbc' % DATABASE_ENGINE
        DATABASES['default']['OPTIONS'] = {'use_legacy_datetime': True, 'MARS_Connection': True}
    DEBUG = cf.get('SYS', 'DEBUG', fallback=DEBUG)

else:
    DATABASE_ENGINE = "sqlite3"
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        }
    }


# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    # {
    #     'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    # },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = False

LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale'),
)

LANGUAGES = (
    ('en', ('English')),
    ('zh-hans', ('中文简体')),
    ('zh-hant', ('中文繁體')),
)



# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = ''
STATIC_PATH = os.path.join(BASE_DIR, 'static').replace('\\', '/')
STATICFILES_DIRS = (
    '%s/%s' % (BASE_DIR, '/static'),
)



# List of finder classes that know how to find static files in
# various locations.
STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    #    'django.contrib.staticfiles.finders.DefaultStorageFinder',
)

LOGIN_REDIRECT_URL = "/userinfo/login/"

LOGIN_URL = LOGIN_REDIRECT_URL



# 上传文件目录
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'




#  系统参数

LANGUAGE = "Python27"
VERSION = "VERSION 1.0.1"
NODENUMBER = "100"
CLOSE_DATE = "20170930"